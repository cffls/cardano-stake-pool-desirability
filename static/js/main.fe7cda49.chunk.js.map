{"version":3,"sources":["model/StakeSpecs.js","App.js","serviceWorker.js","index.js"],"names":["StakeSpecs","z0","numPools","sigma","totalStakeInCurrentPool","currentTotalSupply","nonmyopicSigma","s","r","k","Math","max","totalStakeFromPoolLeaders","t","R","inflationRate","pow","totalPoolReward","a0","sP","min","sigmaP","poolLeaderReward","c","m","memberReward","desirability","ADARound","amount","round","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","targetNumPools","yourTotalStake","usdToADA","costPerEpochInUSD","myopicTotalPoolReward","myopicPoolLeaderReward","myopicMemberReward","myopicIndividualReward","myopicDesirability","nonmyopicTotalPoolReward","nonmyopicPoolLeaderReward","nonmyopicMemberReward","nonmyopicIndividualReward","nonmyopicDesirability","setState","key","e","_this2","defineProperty","parseFloat","target","value","updateAll","_this3","react_default","a","createElement","className","role","onChange","handleChange","defaultValue","id","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe7cda49.chunk.js","sourcesContent":["function z0(numPools) {\n  return 1 / numPools;\n}\n\nfunction sigma(totalStakeInCurrentPool, currentTotalSupply) {\n  return totalStakeInCurrentPool / currentTotalSupply;\n}\n\nfunction nonmyopicSigma(s, sigma, r, z0, k) {\n  if (r <= k) {\n    return Math.max(sigma, z0);\n  } else {\n    return s;\n  }\n}\n\nfunction s(totalStakeFromPoolLeaders, currentTotalSupply) {\n  return totalStakeFromPoolLeaders / currentTotalSupply;\n}\n\nfunction t(\n  totalStakeInCurrentPool,\n  totalStakeFromPoolLeaders,\n  currentTotalSupply\n) {\n  return (\n    (totalStakeInCurrentPool - totalStakeFromPoolLeaders) / currentTotalSupply\n  );\n}\n\nfunction R(currentTotalSupply, inflationRate) {\n  return (\n    currentTotalSupply * Math.pow(1 + inflationRate / 100, 1 / 73) -\n    currentTotalSupply\n  );\n}\n\nfunction totalPoolReward(R, s, sigma, a0, z0) {\n  var sP = Math.min(s, z0);\n  var sigmaP = Math.min(sigma, z0);\n  return (\n    (R / (1 + a0)) *\n    (sigmaP + (sP * a0 * (sigmaP - (sP * (z0 - sigmaP)) / z0)) / z0)\n  );\n}\n\nfunction poolLeaderReward(totalPoolReward, c, m, s, sigma) {\n  if (totalPoolReward < c) {\n    return totalPoolReward;\n  } else {\n    return c + (totalPoolReward - c) * (m + ((1 - m) * s) / sigma);\n  }\n}\n\nfunction memberReward(totalPoolReward, c, m, t, sigma) {\n  if (totalPoolReward < c) {\n    return 0;\n  } else {\n    return ((totalPoolReward - c) * (1 - m) * t) / sigma;\n  }\n}\n\nfunction desirability(totalPoolReward, c, m) {\n  if (totalPoolReward <= c) {\n    return 0;\n  } else {\n    return (totalPoolReward - c) * (1 - m);\n  }\n}\n\nexport default {\n  z0,\n  sigma,\n  nonmyopicSigma,\n  s,\n  t,\n  R,\n  totalPoolReward,\n  poolLeaderReward,\n  memberReward,\n  desirability\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport StakeSpecs from \"./model/StakeSpecs.js\";\n\nfunction costInADA(costPerEpochInUSD, usdToADA) {\n  return ADARound(costPerEpochInUSD / usdToADA);\n}\n\nfunction ADARound(amount) {\n  // Round to 6 decimals\n  return Math.round(amount * 1000000) / 1000000;\n}\n\nclass App extends Component {\n  updateAll() {\n    var z0 = StakeSpecs.z0(this.state.targetNumPools);\n    var sigma = StakeSpecs.sigma(\n      this.state.totalStakeInCurrentPool,\n      this.state.currentTotalSupply\n    );\n    var s = StakeSpecs.s(\n      this.state.totalStakeFromPoolLeaders,\n      this.state.currentTotalSupply\n    );\n    var nonmyopicSigma = StakeSpecs.nonmyopicSigma(\n      s,\n      sigma,\n      this.state.r,\n      z0,\n      this.state.targetNumPools\n    );\n    var t = StakeSpecs.t(\n      this.state.totalStakeInCurrentPool,\n      this.state.totalStakeFromPoolLeaders,\n      this.state.currentTotalSupply\n    );\n    var c = costInADA(this.state.costPerEpochInUSD, this.state.usdToADA);\n    var R = StakeSpecs.R(\n      this.state.currentTotalSupply,\n      this.state.inflationRate\n    );\n    var myopicTotalPoolReward = ADARound(\n      StakeSpecs.totalPoolReward(R, s, sigma, this.state.a0, z0)\n    );\n    var myopicPoolLeaderReward = ADARound(\n      StakeSpecs.poolLeaderReward(\n        myopicTotalPoolReward,\n        c,\n        this.state.m / 100,\n        s,\n        sigma\n      )\n    );\n    var myopicMemberReward = ADARound(\n      StakeSpecs.memberReward(\n        myopicTotalPoolReward,\n        c,\n        this.state.m / 100,\n        t,\n        sigma\n      )\n    );\n\n    var myopicIndividualReward = ADARound(\n      (myopicMemberReward * this.state.yourTotalStake) /\n        (this.state.totalStakeInCurrentPool -\n          this.state.totalStakeFromPoolLeaders)\n    );\n\n    var myopicDesirability = ADARound(\n      StakeSpecs.desirability(\n        myopicTotalPoolReward,\n        c,\n        this.state.m / 100,\n        sigma\n      )\n    );\n\n    var nonmyopicTotalPoolReward = ADARound(\n      StakeSpecs.totalPoolReward(R, s, nonmyopicSigma, this.state.a0, z0)\n    );\n\n    var nonmyopicPoolLeaderReward = ADARound(\n      StakeSpecs.poolLeaderReward(\n        nonmyopicTotalPoolReward,\n        c,\n        this.state.m / 100,\n        s,\n        nonmyopicSigma\n      )\n    );\n\n    var nonmyopicMemberReward = ADARound(\n      StakeSpecs.memberReward(\n        nonmyopicTotalPoolReward,\n        c,\n        this.state.m / 100,\n        t,\n        nonmyopicSigma\n      )\n    );\n\n    var nonmyopicIndividualReward = ADARound(\n      (nonmyopicMemberReward * this.state.yourTotalStake) /\n        (this.state.totalStakeInCurrentPool -\n          this.state.totalStakeFromPoolLeaders)\n    );\n\n    var nonmyopicDesirability = ADARound(\n      StakeSpecs.desirability(\n        nonmyopicTotalPoolReward,\n        c,\n        this.state.m / 100,\n        z0\n      )\n    );\n\n    this.setState({\n      z0: z0,\n      sigma: sigma,\n      nonmyopicSigma: nonmyopicSigma,\n      s: s,\n      t: t,\n      c: c,\n      R: R,\n      myopicTotalPoolReward: myopicTotalPoolReward,\n      myopicPoolLeaderReward: myopicPoolLeaderReward,\n      myopicMemberReward: myopicMemberReward,\n      myopicIndividualReward: myopicIndividualReward,\n      myopicDesirability: myopicDesirability,\n      nonmyopicTotalPoolReward: nonmyopicTotalPoolReward,\n      nonmyopicPoolLeaderReward: nonmyopicPoolLeaderReward,\n      nonmyopicMemberReward: nonmyopicMemberReward,\n      nonmyopicIndividualReward: nonmyopicIndividualReward,\n      nonmyopicDesirability: nonmyopicDesirability\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    var currentTotalSupply = 31000000000;\n    var a0 = 0.02; // Pool leader influence factor\n    var targetNumPools = 1000;\n    var r = 20; //Rank of the pool\n    var totalStakeInCurrentPool = currentTotalSupply / targetNumPools;\n    var totalStakeFromPoolLeaders = 1000000;\n    var yourTotalStake = 100000;\n    var usdToADA = 0.05;\n    var costPerEpochInUSD = 5;\n    var m = 5; // Pool fee %\n    var inflationRate = 6; // Inflation rate in percent\n    this.state = {\n      currentTotalSupply: currentTotalSupply,\n      targetNumPools: targetNumPools,\n      totalStakeInCurrentPool: totalStakeInCurrentPool,\n      totalStakeFromPoolLeaders: totalStakeFromPoolLeaders,\n      yourTotalStake: yourTotalStake,\n      a0: a0,\n      r: r,\n      usdToADA: usdToADA,\n      costPerEpochInUSD: costPerEpochInUSD,\n      m: m,\n      inflationRate: inflationRate\n    };\n  }\n\n  handleChange(key, e) {\n    this.setState({ [key]: parseFloat(e.target.value) }, () => {\n      this.updateAll();\n    });\n  }\n\n  componentDidMount() {\n    this.updateAll();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row title\">\n          <div\n            className=\"alert alert-primary col-sm-9 offset-sm-2\"\n            role=\"alert\"\n          >\n            <h4 className=\"alert-heading\">\n              Cardano Stake Pool Desirability Estimation\n            </h4>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-3 offset-sm-2 card\">\n            <div>Total ADA Supply</div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">₳</span>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={e => this.handleChange(\"currentTotalSupply\", e)}\n                defaultValue={this.state.currentTotalSupply}\n              />\n            </div>\n            <div>Inflation rate per year</div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">%</span>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={e => this.handleChange(\"inflationRate\", e)}\n                defaultValue={this.state.inflationRate}\n              />\n            </div>\n            <div>Pool leader influence factor</div>\n            <div className=\"input-group mb-3\">\n              <input\n                className=\"form-control\"\n                onChange={e => this.handleChange(\"a0\", e)}\n                defaultValue={this.state.a0}\n              />\n            </div>\n            <div>Number of desired pools</div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">#</span>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={e => this.handleChange(\"targetNumPools\", e)}\n                defaultValue={this.state.targetNumPools}\n              />\n            </div>\n            <div>Current rank of the pool</div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">#</span>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={e => this.handleChange(\"r\", e)}\n                defaultValue={this.state.r}\n              />\n            </div>\n            <div>Total stake in current pool</div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">₳</span>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={e => this.handleChange(\"totalStakeInCurrentPool\", e)}\n                defaultValue={this.state.totalStakeInCurrentPool}\n              />\n            </div>\n            <div>Total stake from pool leader</div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">₳</span>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={e =>\n                  this.handleChange(\"totalStakeFromPoolLeaders\", e)\n                }\n                defaultValue={this.state.totalStakeFromPoolLeaders}\n              />\n            </div>\n            <div>Your total stake</div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">₳</span>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={e => this.handleChange(\"yourTotalStake\", e)}\n                defaultValue={this.state.yourTotalStake}\n              />\n            </div>\n            <div>Exchange rate</div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">USD/ADA</span>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={e => this.handleChange(\"usdToADA\", e)}\n                defaultValue={this.state.usdToADA}\n              />\n            </div>\n            <div>Cost per epoch</div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">$</span>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={e => this.handleChange(\"costPerEpochInUSD\", e)}\n                defaultValue={this.state.costPerEpochInUSD}\n              />\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">₳ {this.state.c}</span>\n              </div>\n            </div>\n            <div>Pool fee</div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">%</span>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={e => this.handleChange(\"m\", e)}\n                defaultValue={this.state.m}\n              />\n            </div>\n          </div>\n          <div className=\"col-sm-5 offset-sm-1\">\n            <ul className=\"list-group dependent-variable-panel\">\n              <li className=\"list-group-item list-group-item-action active\">\n                <div>Myopic estimation</div>\n              </li>\n              <li className=\"list-group-item\">\n                <div>Total pool reward per epoch</div>\n                <div>{this.state.myopicTotalPoolReward}</div>\n              </li>\n              <li className=\"list-group-item\">\n                <div>Pool leader reward per epoch</div>\n                <div>{this.state.myopicPoolLeaderReward}</div>\n              </li>\n              <li className=\"list-group-item\">\n                <div>Total stake member reward per epoch</div>\n                <div>{this.state.myopicMemberReward}</div>\n              </li>\n              <li className=\"list-group-item\">\n                <div>Your reward per epoch</div>\n                <div>{this.state.myopicIndividualReward}</div>\n              </li>\n              <li className=\"list-group-item\">\n                <div>Desirability</div>\n                <div>{this.state.myopicDesirability}</div>\n              </li>\n            </ul>\n            <ul className=\"list-group dependent-variable-panel\">\n              <li className=\"list-group-item list-group-item-action active\">\n                <div>Non-myopic estimation</div>\n              </li>\n              <li className=\"list-group-item\">\n                <div>Total pool reward per epoch when pool is saturated</div>\n                <div>{this.state.nonmyopicTotalPoolReward}</div>\n              </li>\n              <li className=\"list-group-item\">\n                <div>Pool leader reward per epoch</div>\n                <div>{this.state.nonmyopicPoolLeaderReward}</div>\n              </li>\n              <li className=\"list-group-item\">\n                <div>Total stake member reward per epoch</div>\n                <div>{this.state.nonmyopicMemberReward}</div>\n              </li>\n              <li className=\"list-group-item\">\n                <div>Your reward per epoch</div>\n                <div>{this.state.nonmyopicIndividualReward}</div>\n              </li>\n              <li className=\"list-group-item\">\n                <div>Desirability</div>\n                <div>{this.state.nonmyopicDesirability}</div>\n              </li>\n            </ul>\n            <a\n              id=\"githublink\"\n              href=\"https://github.com/cffls/cardano-stake-pool-desirability\"\n            >\n              <span>Github </span>\n              <em className=\"fa fa-github\" />\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}